/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_connectedway_io_Framework */

#ifndef _Included_com_connectedway_io_Framework
#define _Included_com_connectedway_io_Framework
#ifdef __cplusplus
extern "C" {
#endif
#undef com_connectedway_io_Framework_FS_WIN32
#define com_connectedway_io_Framework_FS_WIN32 1L
#undef com_connectedway_io_Framework_FS_DARWIN
#define com_connectedway_io_Framework_FS_DARWIN 2L
#undef com_connectedway_io_Framework_FS_LINUX
#define com_connectedway_io_Framework_FS_LINUX 3L
#undef com_connectedway_io_Framework_FS_FILEX
#define com_connectedway_io_Framework_FS_FILEX 4L
#undef com_connectedway_io_Framework_FS_NUFILE
#define com_connectedway_io_Framework_FS_NUFILE 5L
#undef com_connectedway_io_Framework_FS_ANDROID
#define com_connectedway_io_Framework_FS_ANDROID 6L
#undef com_connectedway_io_Framework_FS_OTHER
#define com_connectedway_io_Framework_FS_OTHER 7L
#undef com_connectedway_io_Framework_FS_CIFS
#define com_connectedway_io_Framework_FS_CIFS 8L
#undef com_connectedway_io_Framework_FS_FILE
#define com_connectedway_io_Framework_FS_FILE 9L
#undef com_connectedway_io_Framework_FS_PIPE
#define com_connectedway_io_Framework_FS_PIPE 10L
#undef com_connectedway_io_Framework_FS_MAILSLOT
#define com_connectedway_io_Framework_FS_MAILSLOT 11L
#undef com_connectedway_io_Framework_FS_BROWSE_WORKGROUPS
#define com_connectedway_io_Framework_FS_BROWSE_WORKGROUPS 12L
#undef com_connectedway_io_Framework_FS_BROWSE_SERVERS
#define com_connectedway_io_Framework_FS_BROWSE_SERVERS 13L
#undef com_connectedway_io_Framework_FS_BROWSE_SHARES
#define com_connectedway_io_Framework_FS_BROWSE_SHARES 14L
#undef com_connectedway_io_Framework_FS_BOOKMARKS
#define com_connectedway_io_Framework_FS_BOOKMARKS 15L
#undef com_connectedway_io_Framework_FS_UNKNOWN
#define com_connectedway_io_Framework_FS_UNKNOWN 16L
/*
 * Class:     com_connectedway_io_Framework
 * Method:    init
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_com_connectedway_io_Framework_init
  (JNIEnv *, jobject);

/*
 * Class:     com_connectedway_io_Framework
 * Method:    startup
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_com_connectedway_io_Framework_startup
  (JNIEnv *, jobject);

/*
 * Class:     com_connectedway_io_Framework
 * Method:    load
 * Signature: (Lcom/connectedway/io/File;)V
 */
JNIEXPORT void JNICALL Java_com_connectedway_io_Framework_load
  (JNIEnv *, jobject, jobject);

/*
 * Class:     com_connectedway_io_Framework
 * Method:    save
 * Signature: (Lcom/connectedway/io/File;)V
 */
JNIEXPORT void JNICALL Java_com_connectedway_io_Framework_save
  (JNIEnv *, jobject, jobject);

/*
 * Class:     com_connectedway_io_Framework
 * Method:    setHostname
 * Signature: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_com_connectedway_io_Framework_setHostname
  (JNIEnv *, jobject, jstring, jstring, jstring);

/*
 * Class:     com_connectedway_io_Framework
 * Method:    getHostname
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_connectedway_io_Framework_getHostname
  (JNIEnv *, jobject);

/*
 * Class:     com_connectedway_io_Framework
 * Method:    getWorkgroup
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_connectedway_io_Framework_getWorkgroup
  (JNIEnv *, jobject);

/*
 * Class:     com_connectedway_io_Framework
 * Method:    getDescription
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_connectedway_io_Framework_getDescription
  (JNIEnv *, jobject);

/*
 * Class:     com_connectedway_io_Framework
 * Method:    setUUID
 * Signature: (Ljava/util/UUID;)V
 */
JNIEXPORT void JNICALL Java_com_connectedway_io_Framework_setUUID
  (JNIEnv *, jobject, jobject);

/*
 * Class:     com_connectedway_io_Framework
 * Method:    getUUID
 * Signature: ()Ljava/util/UUID;
 */
JNIEXPORT jobject JNICALL Java_com_connectedway_io_Framework_getUUID
  (JNIEnv *, jobject);

/*
 * Class:     com_connectedway_io_Framework
 * Method:    getRootDir
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_connectedway_io_Framework_getRootDir
  (JNIEnv *, jobject);

/*
 * Class:     com_connectedway_io_Framework
 * Method:    setInterfaceDiscovery
 * Signature: (Z)V
 */
JNIEXPORT void JNICALL Java_com_connectedway_io_Framework_setInterfaceDiscovery
  (JNIEnv *, jobject, jboolean);

/*
 * Class:     com_connectedway_io_Framework
 * Method:    getInterfaceDiscovery
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_com_connectedway_io_Framework_getInterfaceDiscovery
  (JNIEnv *, jobject);

/*
 * Class:     com_connectedway_io_Framework
 * Method:    setLMB
 * Signature: (Ljava/net/InetAddress;Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_com_connectedway_io_Framework_setLMB
  (JNIEnv *, jobject, jobject, jstring);

/*
 * Class:     com_connectedway_io_Framework
 * Method:    addInterface
 * Signature: (Lcom/connectedway/io/Framework/Interface;)V
 */
JNIEXPORT void JNICALL Java_com_connectedway_io_Framework_addInterface
  (JNIEnv *, jobject, jobject);

/*
 * Class:     com_connectedway_io_Framework
 * Method:    removeInterface
 * Signature: (Ljava/net/InetAddress;)V
 */
JNIEXPORT void JNICALL Java_com_connectedway_io_Framework_removeInterface
  (JNIEnv *, jobject, jobject);

/*
 * Class:     com_connectedway_io_Framework
 * Method:    getInterfaces
 * Signature: ()[Lcom/connectedway/io/Framework/Interface;
 */
JNIEXPORT jobjectArray JNICALL Java_com_connectedway_io_Framework_getInterfaces
  (JNIEnv *, jobject);

/*
 * Class:     com_connectedway_io_Framework
 * Method:    getMyAddresses
 * Signature: ()[Ljava/net/InetAddress;
 */
JNIEXPORT jobjectArray JNICALL Java_com_connectedway_io_Framework_getMyAddresses
  (JNIEnv *, jobject);

/*
 * Class:     com_connectedway_io_Framework
 * Method:    addMap
 * Signature: (Lcom/connectedway/io/Framework/Map;)Z
 */
JNIEXPORT jboolean JNICALL Java_com_connectedway_io_Framework_addMap
  (JNIEnv *, jobject, jobject);

/*
 * Class:     com_connectedway_io_Framework
 * Method:    getMaps
 * Signature: ()[Lcom/connectedway/io/Framework/Map;
 */
JNIEXPORT jobjectArray JNICALL Java_com_connectedway_io_Framework_getMaps
  (JNIEnv *, jobject);

/*
 * Class:     com_connectedway_io_Framework
 * Method:    removeMap
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_com_connectedway_io_Framework_removeMap
  (JNIEnv *, jobject, jstring);

/*
 * Class:     com_connectedway_io_Framework
 * Method:    update
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_com_connectedway_io_Framework_update
  (JNIEnv *, jobject);

#ifdef __cplusplus
}
#endif
#endif
