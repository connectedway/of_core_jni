/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_connectedway_io_FileSystem */

#ifndef _Included_com_connectedway_io_FileSystem
#define _Included_com_connectedway_io_FileSystem
#ifdef __cplusplus
extern "C" {
#endif
#undef com_connectedway_io_FileSystem_BA_EXISTS
#define com_connectedway_io_FileSystem_BA_EXISTS 1L
#undef com_connectedway_io_FileSystem_BA_REGULAR
#define com_connectedway_io_FileSystem_BA_REGULAR 2L
#undef com_connectedway_io_FileSystem_BA_DIRECTORY
#define com_connectedway_io_FileSystem_BA_DIRECTORY 4L
#undef com_connectedway_io_FileSystem_BA_HIDDEN
#define com_connectedway_io_FileSystem_BA_HIDDEN 8L
#undef com_connectedway_io_FileSystem_BA_SHARE
#define com_connectedway_io_FileSystem_BA_SHARE 16L
#undef com_connectedway_io_FileSystem_BA_SERVER
#define com_connectedway_io_FileSystem_BA_SERVER 32L
#undef com_connectedway_io_FileSystem_BA_WORKGROUP
#define com_connectedway_io_FileSystem_BA_WORKGROUP 64L
#undef com_connectedway_io_FileSystem_BA_BOOKMARK
#define com_connectedway_io_FileSystem_BA_BOOKMARK 128L
#undef com_connectedway_io_FileSystem_ACCESS_READ
#define com_connectedway_io_FileSystem_ACCESS_READ 4L
#undef com_connectedway_io_FileSystem_ACCESS_WRITE
#define com_connectedway_io_FileSystem_ACCESS_WRITE 2L
#undef com_connectedway_io_FileSystem_ACCESS_EXECUTE
#define com_connectedway_io_FileSystem_ACCESS_EXECUTE 1L
#undef com_connectedway_io_FileSystem_SPACE_TOTAL
#define com_connectedway_io_FileSystem_SPACE_TOTAL 0L
#undef com_connectedway_io_FileSystem_SPACE_FREE
#define com_connectedway_io_FileSystem_SPACE_FREE 1L
#undef com_connectedway_io_FileSystem_SPACE_USABLE
#define com_connectedway_io_FileSystem_SPACE_USABLE 2L
#undef com_connectedway_io_FileSystem_OPEN_READ
#define com_connectedway_io_FileSystem_OPEN_READ 0L
#undef com_connectedway_io_FileSystem_OPEN_WRITE
#define com_connectedway_io_FileSystem_OPEN_WRITE 1L
#undef com_connectedway_io_FileSystem_OPEN_APPEND
#define com_connectedway_io_FileSystem_OPEN_APPEND 2L
#undef com_connectedway_io_FileSystem_OPEN_RW
#define com_connectedway_io_FileSystem_OPEN_RW 3L
#undef com_connectedway_io_FileSystem_SEEK_SET
#define com_connectedway_io_FileSystem_SEEK_SET 0L
#undef com_connectedway_io_FileSystem_SEEK_CUR
#define com_connectedway_io_FileSystem_SEEK_CUR 1L
#undef com_connectedway_io_FileSystem_SEEK_END
#define com_connectedway_io_FileSystem_SEEK_END 2L
/*
 * Class:     com_connectedway_io_FileSystem
 * Method:    isRemoteFile
 * Signature: (Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_com_connectedway_io_FileSystem_isRemoteFile
  (JNIEnv *, jclass, jstring);

/*
 * Class:     com_connectedway_io_FileSystem
 * Method:    normalize
 * Signature: (Ljava/lang/String;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_connectedway_io_FileSystem_normalize
  (JNIEnv *, jobject, jstring);

/*
 * Class:     com_connectedway_io_FileSystem
 * Method:    prefixLength
 * Signature: (Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_com_connectedway_io_FileSystem_prefixLength
  (JNIEnv *, jobject, jstring);

/*
 * Class:     com_connectedway_io_FileSystem
 * Method:    resolve
 * Signature: (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_connectedway_io_FileSystem_resolve__Ljava_lang_String_2Ljava_lang_String_2
  (JNIEnv *, jobject, jstring, jstring);

/*
 * Class:     com_connectedway_io_FileSystem
 * Method:    authenticate
 * Signature: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_com_connectedway_io_FileSystem_authenticate
  (JNIEnv *, jobject, jstring, jstring, jstring, jstring);

/*
 * Class:     com_connectedway_io_FileSystem
 * Method:    isAbsolute
 * Signature: (Lcom/connectedway/io/File;)Z
 */
JNIEXPORT jboolean JNICALL Java_com_connectedway_io_FileSystem_isAbsolute
  (JNIEnv *, jobject, jobject);

/*
 * Class:     com_connectedway_io_FileSystem
 * Method:    resolve
 * Signature: (Lcom/connectedway/io/File;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_connectedway_io_FileSystem_resolve__Lcom_connectedway_io_File_2
  (JNIEnv *, jobject, jobject);

/*
 * Class:     com_connectedway_io_FileSystem
 * Method:    canonicalize
 * Signature: (Ljava/lang/String;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_connectedway_io_FileSystem_canonicalize
  (JNIEnv *, jobject, jstring);

/*
 * Class:     com_connectedway_io_FileSystem
 * Method:    getBooleanAttributes
 * Signature: (Lcom/connectedway/io/File;)I
 */
JNIEXPORT jint JNICALL Java_com_connectedway_io_FileSystem_getBooleanAttributes
  (JNIEnv *, jobject, jobject);

/*
 * Class:     com_connectedway_io_FileSystem
 * Method:    checkAccess
 * Signature: (Lcom/connectedway/io/File;I)Z
 */
JNIEXPORT jboolean JNICALL Java_com_connectedway_io_FileSystem_checkAccess
  (JNIEnv *, jobject, jobject, jint);

/*
 * Class:     com_connectedway_io_FileSystem
 * Method:    setPermission
 * Signature: (Lcom/connectedway/io/File;IZZ)Z
 */
JNIEXPORT jboolean JNICALL Java_com_connectedway_io_FileSystem_setPermission
  (JNIEnv *, jobject, jobject, jint, jboolean, jboolean);

/*
 * Class:     com_connectedway_io_FileSystem
 * Method:    getLastModifiedTime
 * Signature: (Lcom/connectedway/io/File;)J
 */
JNIEXPORT jlong JNICALL Java_com_connectedway_io_FileSystem_getLastModifiedTime
  (JNIEnv *, jobject, jobject);

/*
 * Class:     com_connectedway_io_FileSystem
 * Method:    getLength
 * Signature: (Lcom/connectedway/io/File;)J
 */
JNIEXPORT jlong JNICALL Java_com_connectedway_io_FileSystem_getLength
  (JNIEnv *, jobject, jobject);

/*
 * Class:     com_connectedway_io_FileSystem
 * Method:    createFileExclusively
 * Signature: (Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_com_connectedway_io_FileSystem_createFileExclusively
  (JNIEnv *, jobject, jstring);

/*
 * Class:     com_connectedway_io_FileSystem
 * Method:    delete
 * Signature: (Lcom/connectedway/io/File;)Z
 */
JNIEXPORT jboolean JNICALL Java_com_connectedway_io_FileSystem_delete
  (JNIEnv *, jobject, jobject);

/*
 * Class:     com_connectedway_io_FileSystem
 * Method:    list
 * Signature: (Lcom/connectedway/io/File;)[Ljava/lang/String;
 */
JNIEXPORT jobjectArray JNICALL Java_com_connectedway_io_FileSystem_list
  (JNIEnv *, jobject, jobject);

/*
 * Class:     com_connectedway_io_FileSystem
 * Method:    listFiles
 * Signature: (Lcom/connectedway/io/File;)[Lcom/connectedway/io/File;
 */
JNIEXPORT jobjectArray JNICALL Java_com_connectedway_io_FileSystem_listFiles
  (JNIEnv *, jobject, jobject);

/*
 * Class:     com_connectedway_io_FileSystem
 * Method:    createDirectory
 * Signature: (Lcom/connectedway/io/File;)Z
 */
JNIEXPORT jboolean JNICALL Java_com_connectedway_io_FileSystem_createDirectory
  (JNIEnv *, jobject, jobject);

/*
 * Class:     com_connectedway_io_FileSystem
 * Method:    rename
 * Signature: (Lcom/connectedway/io/File;Lcom/connectedway/io/File;)Z
 */
JNIEXPORT jboolean JNICALL Java_com_connectedway_io_FileSystem_rename
  (JNIEnv *, jobject, jobject, jobject);

/*
 * Class:     com_connectedway_io_FileSystem
 * Method:    setLastModifiedTime
 * Signature: (Lcom/connectedway/io/File;J)Z
 */
JNIEXPORT jboolean JNICALL Java_com_connectedway_io_FileSystem_setLastModifiedTime
  (JNIEnv *, jobject, jobject, jlong);

/*
 * Class:     com_connectedway_io_FileSystem
 * Method:    setReadOnly
 * Signature: (Lcom/connectedway/io/File;)Z
 */
JNIEXPORT jboolean JNICALL Java_com_connectedway_io_FileSystem_setReadOnly
  (JNIEnv *, jobject, jobject);

/*
 * Class:     com_connectedway_io_FileSystem
 * Method:    listRoots
 * Signature: ()[Lcom/connectedway/io/File;
 */
JNIEXPORT jobjectArray JNICALL Java_com_connectedway_io_FileSystem_listRoots
  (JNIEnv *, jobject);

/*
 * Class:     com_connectedway_io_FileSystem
 * Method:    getSpace
 * Signature: (Lcom/connectedway/io/File;I)J
 */
JNIEXPORT jlong JNICALL Java_com_connectedway_io_FileSystem_getSpace
  (JNIEnv *, jobject, jobject, jint);

/*
 * Class:     com_connectedway_io_FileSystem
 * Method:    open
 * Signature: (Ljava/lang/String;I)Lcom/connectedway/io/FileDescriptor;
 */
JNIEXPORT jobject JNICALL Java_com_connectedway_io_FileSystem_open
  (JNIEnv *, jobject, jstring, jint);

/*
 * Class:     com_connectedway_io_FileSystem
 * Method:    read
 * Signature: (Lcom/connectedway/io/FileDescriptor;)I
 */
JNIEXPORT jint JNICALL Java_com_connectedway_io_FileSystem_read__Lcom_connectedway_io_FileDescriptor_2
  (JNIEnv *, jobject, jobject);

/*
 * Class:     com_connectedway_io_FileSystem
 * Method:    read
 * Signature: (Lcom/connectedway/io/FileDescriptor;[BII)I
 */
JNIEXPORT jint JNICALL Java_com_connectedway_io_FileSystem_read__Lcom_connectedway_io_FileDescriptor_2_3BII
  (JNIEnv *, jobject, jobject, jbyteArray, jint, jint);

/*
 * Class:     com_connectedway_io_FileSystem
 * Method:    write
 * Signature: (Lcom/connectedway/io/FileDescriptor;I)V
 */
JNIEXPORT void JNICALL Java_com_connectedway_io_FileSystem_write__Lcom_connectedway_io_FileDescriptor_2I
  (JNIEnv *, jobject, jobject, jint);

/*
 * Class:     com_connectedway_io_FileSystem
 * Method:    write
 * Signature: (Lcom/connectedway/io/FileDescriptor;[BII)V
 */
JNIEXPORT void JNICALL Java_com_connectedway_io_FileSystem_write__Lcom_connectedway_io_FileDescriptor_2_3BII
  (JNIEnv *, jobject, jobject, jbyteArray, jint, jint);

/*
 * Class:     com_connectedway_io_FileSystem
 * Method:    seteof
 * Signature: (Lcom/connectedway/io/FileDescriptor;J)V
 */
JNIEXPORT void JNICALL Java_com_connectedway_io_FileSystem_seteof
  (JNIEnv *, jobject, jobject, jlong);

/*
 * Class:     com_connectedway_io_FileSystem
 * Method:    skip
 * Signature: (Lcom/connectedway/io/FileDescriptor;J)J
 */
JNIEXPORT jlong JNICALL Java_com_connectedway_io_FileSystem_skip
  (JNIEnv *, jobject, jobject, jlong);

/*
 * Class:     com_connectedway_io_FileSystem
 * Method:    flush
 * Signature: (Lcom/connectedway/io/FileDescriptor;)V
 */
JNIEXPORT void JNICALL Java_com_connectedway_io_FileSystem_flush
  (JNIEnv *, jobject, jobject);

/*
 * Class:     com_connectedway_io_FileSystem
 * Method:    available
 * Signature: (Lcom/connectedway/io/FileDescriptor;)I
 */
JNIEXPORT jint JNICALL Java_com_connectedway_io_FileSystem_available
  (JNIEnv *, jobject, jobject);

/*
 * Class:     com_connectedway_io_FileSystem
 * Method:    close
 * Signature: (Lcom/connectedway/io/FileDescriptor;)V
 */
JNIEXPORT void JNICALL Java_com_connectedway_io_FileSystem_close
  (JNIEnv *, jobject, jobject);

/*
 * Class:     com_connectedway_io_FileSystem
 * Method:    seek
 * Signature: (Lcom/connectedway/io/FileDescriptor;IJ)J
 */
JNIEXPORT jlong JNICALL Java_com_connectedway_io_FileSystem_seek
  (JNIEnv *, jobject, jobject, jint, jlong);

/*
 * Class:     com_connectedway_io_FileSystem
 * Method:    getLastError
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_com_connectedway_io_FileSystem_getLastError
  (JNIEnv *, jobject);

#ifdef __cplusplus
}
#endif
#endif
